body{
    background : black;
}

h1, h2,h3{
    font-family: Arial;
    color: black;
    text-align: center;
}

/*
@font-face{
font-family: "name";
src: url("http://website/fontfile");
}

header h1{
    display: block;
    color: black;
    text-align: center;
    margin: 0 0;
    font-family: 'Segoe UI', Tahoma, Geneva, Verdana, sans-serif;
}
/* fonts types: Serif con ptas al final/decoraciones, Sans Serif sin decoraciones, Monospace todas las letras ocupan lo mismo*/
header{
    background-color: #b3d1f3;
    padding: 5px 0px;
    border-color: black;
    border-style: hidden;
}

.mainBody{ /*its a class*/
    margin: 0px 0px;
    /*background-color: #dbd7d2;*/
    background-color: black;

}
nav{
    background-color: aliceblue;
    width: 100%;
    text-align: center;
}
#myForm{
    background-color: white;
}
#tableEx{
    background-color: white;
    width: 100%;
    text-align: center;
    right: auto;
    left: auto;
}
#captionTable{
    background-color: white;
    text-align: center;
    margin: 0px 0px;
}
#myVideo{
    display: block;
    border-color: black;
    /* border-style: groove;
       margin-left: auto;
       margin-right: auto;
       width: auto;
    */
width: 100vw;
}
.pileImg{
    float: left;
    border-color: black;
    border-style: dotted;
}
/* flow: block/inline */
/* float : left; will pile objects at the left*/

#myLists{
    background-color: azure;
    margin: 0px 0px;
    clear: both; /*otherwise tries to stay to the left with the images*/
} 

/* overflow property to scroll = scroll dentro de bounding box for seeing content
visible se sale de la caja
hidden lo oculta
p{
    height: 200px;
    width: 200px;
    background-color: white;
    overflow: scroll | visible | hidden; choose 
}
*/

/* flexboxes adapt to browsersize using media queries using display property flexbox and inline flexbox*/
#myFlexbox{
display: flex;
flex-direction: row;
flex-wrap: wrap;
}
/* Shadow and round borders*/
/*shadow(h shadow, v shadow, blur, color)*/
.blue{
    background-color: blue;
    padding: 15px;
    height: 80px;
    width: 100px;
    border-radius: 15px 15px 15px 15px;
    box-shadow: 10px 10px 8px #808080;
}
/* transparency*/
.red{
    background-color: red;
    height: 80px;
    width: 100px;
    opacity: 0.5;/*1=opaque 0=transparent*/
}
/* linear/radial(center) gradient to top to bottom to corner 110deg */
/* up to 10% completely white, to 80% mixed, then complete blue*/
#gradient1{
    border-radius: 12px;
    height: 200px;
    width: 200px;
    /*background: linear-gradient(to top, white 10%, blue 80%);*/
    /* radial= elipse, circle...*/
    background: radial-gradient(circle at center, white 1%, blue 99%);
}
#gradient2{
    border-radius: 12px;
    height: 200px;
    width: 200px;
    background: linear-gradient(to top, white 10%, blue 80%);
    /* radial= elipse, circle...*/
}

/* GRIDS */
#myGrid{
    display: grid;
    grid-template-columns: 40px auto 50px; /* 3 cols con esos anchos. auto ocupa todo el ancho*/
    /* grid-template-columns: [primera] 40px [segunda] auto [tercera] 50px; se pueden nombrar, mas de un nombre tb [n1 n2]*/
    grid-template-rows: 25% 100px auto; /* 3 rows 2fr= 2 fractions of web */
    /*grid-template-columns: repeat(number of cols, width, name) will create 3 cols*/
    background-color: grey;
}
#blue1{
    grid-column-start: 1;
    grid-column-end: 2;
    grid-row-start: 1;
    grid-row-end: 2;
    background-color: blue;
}
#red1{
    grid-column-start: 2;
    grid-column-end: 3;
    grid-row-start: 2;
    grid-row-end: 3;
    background-color: red;
}
#blue2{
    grid-column-start: 3;
    grid-column-end: 4;
    grid-row-start: 2;
    grid-row-end: 3;
    background-color: blue;
}
#red2{
    grid-column-start: 3;
    grid-column-end: 4;
    grid-row-start: 1;
    grid-row-end: 2;
    background-color: red;
}
/* Transforms */
.transition{
    height: 300px;
    width: 300px;
    background-color: green;
    /*transform: translate(200px, 0px);*/
    /*transform: rotate(45deg);*/
    /*transform: scale(0.5,0.5);*/
    /*transform: skew(45deg,15deg);*/
    /* for 3d rotation rotateX (horiz) or rotateY (vert axis)*/
    transition-property: background;
    transition-duration: 2s;
}
.transition:hover{
    background: #ff6a00;
}

/* animations */
@keyframes glow{
    from{
        background-color: blue;
    }
    50%{
        background-color: yellow    
    }
    to{
        background-color: red;
    }
}
/* name has to be same as selector */
.animated{
    animation-name: glow;
    animation-duration: 15s;
}

#DOMdemo{
    background-color: white;
    height: 200px;
    width: 200px;
}

#demoTextSelect{
    background-color: gray;
    height: 200px;
}
#addedImg{
    background-color: white;
}
footer{
    background-color: beige;
    text-align: center;
    position: fixed;
    bottom: 0;
    width: 100%;
}